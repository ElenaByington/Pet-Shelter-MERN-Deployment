{"version":3,"sources":["components/Form.js","components/List.js","components/Detail.js","components/Edit.js","views/Main.js","App.js","serviceWorker.js","index.js"],"names":["props","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errMsg","setErrMsg","to","onSubmit","e","preventDefault","axios","post","then","res","data","errors","navigate","console","log","catch","err","value","onChange","target","className","message","allPets","setAllPets","useEffect","get","map","pet","index","key","_id","setPet","like","setLike","id","onClick","deleteId","delete","put","disabled","for","Form","path","List","Detail","Edit","App","Main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.123d1a28.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errMsg, setErrMsg] = useState({});\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/api/pets/new', {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n            .then(res => {\r\n                if (res.data.errors) {\r\n                    setErrMsg(res.data.errors)\r\n                }\r\n                else {\r\n                    navigate('/')\r\n                }\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">back to home</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h3>Know a pet needing a home?</h3>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <p>\r\n                    <label>Pet Name: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\" value={name}\r\n                        onChange={(e) => { setName(e.target.value) }} />\r\n                    {errMsg.name ? (<span className=\"text-danger\">{errMsg.name.message}</span>) : (\"\")}\r\n                </p>\r\n                <p>\r\n                    <label>Type: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"type\" value={type}\r\n                        onChange={(e) => { setType(e.target.value) }} />\r\n                    {errMsg.type ? (<span className=\"text-danger\">{errMsg.type.message}</span>) : (\"\")}\r\n                </p>\r\n                <p>\r\n                    <label>Description: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\" value={description}\r\n                        onChange={(e) => { setDescription(e.target.value) }} />\r\n                    {errMsg.description ? (<span className=\"text-danger\">{errMsg.description.message}</span>) : (\"\")}\r\n                </p>\r\n                <p>Skills {\"(\"}optional{\")\"}</p>\r\n                <p>\r\n                    <label>Skill 1: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill1\" value={skill1}\r\n                        onChange={(e) => { setSkill1(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill 2: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill2\" value={skill2}\r\n                        onChange={(e) => { setSkill2(e.target.value) }} />\r\n                </p>\r\n                <p>\r\n                    <label>Skill 3: </label><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"skill3\" value={skill3}\r\n                        onChange={(e) => { setSkill3(e.target.value) }} />\r\n                </p>\r\n                <button type=\"submit\">Add Pet</button>\r\n            </form>\r\n        </div >\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nexport default props => {\r\n    const [allPets, setAllPets] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets')\r\n            .then(res => setAllPets(res.data))\r\n            .catch(console.log);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/pets/new\">add a pet to the shelter</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h3>These pets are looking for a good home</h3>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {allPets.map((pet, index) => (\r\n                        <tr key={index}>\r\n                            <td>{pet.name}</td>\r\n                            <td>{pet.type}</td>\r\n                            <td><Link to={`/pets/${pet._id}`}>details</Link>{\" \"}<Link to={`/pets/${pet._id}/edit`}>edit</Link></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default props => {\r\n    const [pet, setPet] = useState({});\r\n    const [like, setLike] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets/' + props.id)\r\n            .then(res => {\r\n                setPet(res.data)\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(\"Error: \", err))\r\n    }, [props.id])\r\n\r\n    const handleDelete = deleteId => {\r\n        axios.delete('http://localhost:8000/api/pets/' + deleteId)\r\n            .then(res => {\r\n                navigate('/')\r\n                console.log(res)\r\n                setLike(true)\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const handleLike = _id => {\r\n        pet.like += 1;\r\n        axios.put('http://localhost:8000/api/pets/' + props.id, pet)\r\n            .then(res => { setLike(true) })\r\n            .catch(err => console.log(\"Error: \", err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">back to home</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h3>Details about: {pet.name}</h3>\r\n            <button onClick={e => handleDelete(pet._id)}>Delete</button>\r\n            <p>Pet type: {pet.type}</p>\r\n            <p>Description: {pet.description}</p>\r\n            <p>Skills: {pet.skill1} {pet.skill2} {pet.skill3}</p>\r\n\r\n            <button onClick={e => { handleLike(pet._id) }} disabled={like}>{like === true ? \"Liked!\" : \"Like\"} {pet.name}</button>\r\n            <p>{pet.like} like{\"(\"}s{\")\"}</p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errMsg, setErrMsg] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets/' + props.id)\r\n            .then(res => {\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            })\r\n            .catch(console.log)\r\n    }, [props.id])\r\n\r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/pets/' + props.id, {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n            .then(res => {\r\n                if (res.data.errors) {\r\n                    setErrMsg(res.data.errors)\r\n                }\r\n                else {\r\n                    navigate('/')\r\n                }\r\n                console.log(res)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">back to home</Link>\r\n            <h1>Pet Shelter</h1>\r\n            <h3>Edit {name}</h3>\r\n\r\n            <form onSubmit={updatePet}>\r\n                <p>\r\n                    <label for=\"name\">Pet Name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                    {errMsg.name ? <span className=\"text-danger\">{errMsg.name.message}</span> : \"\"}\r\n                </p>\r\n                <p>\r\n                    <label for=\"type\">Pet Type: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)} />\r\n                    {errMsg.type ? (<span className=\"text-danger\">{errMsg.type.message}</span>) : (\"\")}\r\n                </p>\r\n                <p>\r\n                    <label for=\"description\">Description: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)} />\r\n                    {errMsg.description ? (<span className=\"text-danger\">{errMsg.description.message}</span>) : (\"\")}\r\n                </p>\r\n                <p>Skills {\"(\"}optional{\")\"}</p>\r\n                <p>\r\n                    <label for=\"skill1\">Skill 1: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={skill1}\r\n                        onChange={(e) => setSkill1(e.target.value)} />\r\n                </p>\r\n                <p>\r\n                    <label for=\"skill2\">Skill 2: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={skill2}\r\n                        onChange={(e) => setSkill2(e.target.value)} />\r\n                </p>\r\n                <p>\r\n                    <label for=\"skill3\">Skill 3: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={skill3}\r\n                        onChange={(e) => setSkill3(e.target.value)} />\r\n                </p>\r\n                <button type=\"submit\">Edit Pet</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Router } from '@reach/router';\r\nimport Form from '../components/Form';\r\nimport List from '../components/List';\r\nimport Detail from '../components/Detail';\r\nimport Edit from '../components/Edit';\r\n\r\nexport default () => {\r\n    return (\r\n        <Router>\r\n            <Form path=\"/pets/new\" />\r\n            <List path=\"/\" />\r\n            <Detail path=\"/pets/:id\" />\r\n            <Edit path=\"pets/:id/edit\" />\r\n        </Router>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\n\nimport Main from './views/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main path=\"/\" />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}